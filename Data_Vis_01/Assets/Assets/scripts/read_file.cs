// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class read_file : MonoBehaviour {

	public TextAsset file;

	void Start(){
		Load (file);
	}

	[System.Serializable]

	public class Row
	{
		public string Avenue;
		public string num;
		public string Building;
		public string Floors;
		public string Tenant;

	}

	List<Row> rowList = new List<Row>();
	bool isLoaded = false;

	public bool IsLoaded()
	{
		return isLoaded;
	}

	public List<Row> GetRowList()
	{
		return rowList;
	}

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.Avenue = grid[i][0];
			row.num = grid[i][1];
			row.Building = grid[i][2];
			row.Floors = grid[i][3];
			row.Tenant = grid[i][4];

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int NumRows()
	{
		return rowList.Count;
	}

	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public Row Find_Avenue(string find)
	{
		return rowList.Find(x => x.Avenue == find);
	}
	public List<Row> FindAll_Avenue(string find)
	{
		return rowList.FindAll(x => x.Avenue == find);
	}
	public Row Find_num(string find)
	{
		return rowList.Find(x => x.num == find);	
	}
	public List<Row> FindAll_num(string find)
	{
		return rowList.FindAll(x => x.num == find);
	}
	public Row Find_Building(string find)
	{
		return rowList.Find(x => x.Building == find);
	}
	public List<Row> FindAll_Building(string find)
	{
		return rowList.FindAll(x => x.Building == find);
	}
	public Row Find_Floors(string find)
	{
		return rowList.Find(x => x.Floors == find);
	}
	public List<Row> FindAll_Floors(string find)
	{
		return rowList.FindAll(x => x.Floors == find);
	}
	public Row Find_Tenant(string find)
	{
		return rowList.Find(x => x.Tenant == find);
	}
	public List<Row> FindAll_Tenant(string find)
	{
		return rowList.FindAll(x => x.Tenant == find);
	}

}